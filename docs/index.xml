<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docs on Syndesis</title>
    <link>https://syndesis.io/docs/</link>
    <description>Recent content in Docs on Syndesis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    
	<atom:link href="https://syndesis.io/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Syndesis CLI</title>
      <link>https://syndesis.io/docs/cli/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://syndesis.io/docs/cli/</guid>
      <description>Buildtool &amp;ldquo;syndesis&amp;rdquo; Syndesis uses a single tool for controlling various aspects of the build and developer related tasks. This script can be found in $SYNDESIS_DIR/tools/bin and is called syndesis. It requires bash and can be used on any Unix or macOS.
To have this script handy all the time it is recommended to either put this bin/ directory into the path or add a symlink from syndesis into a directory which is already on your execution path.</description>
    </item>
    
    <item>
      <title>Development</title>
      <link>https://syndesis.io/docs/development/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://syndesis.io/docs/development/</guid>
      <description>Maven Groups Syndesis uses Maven as build tool. Maven groups are used to separate the various Syndesis parts.
In details Syndesis consists of the following groups:
   Group Maven Docker Image Description     common io.syndesis.common  Syndesis shared common module   connector io.syndesis.connector  Supported camel connectors   rest io.syndesis.rest syndesis/syndesis-server REST backend for managing integrations. This is the main sever.   integration io.</description>
    </item>
    
    <item>
      <title>Syndesis Data Shapes</title>
      <link>https://syndesis.io/docs/datashapes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://syndesis.io/docs/datashapes/</guid>
      <description>A very important feature of any integration platform is to manage transparently the data format between the source and the destination channel. Syndesis and the powerful visual data mapper tool bundled with it, simplifies this concept with the definition of a datashape.
A datashape is a way to describe any inbound/outbound message format and to allow the user to easily map each data property in the integration step: said in other words, you will be able to transform on the fly the input/output of the data involved in an integration.</description>
    </item>
    
    <item>
      <title>Syndesis backend architecture</title>
      <link>https://syndesis.io/docs/backend_architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://syndesis.io/docs/backend_architecture/</guid>
      <description>This document want to illustrates at high level some of the components that makes up Syndesis and how they are communicating together to finally serves the creation of an integration. We are using Apache Camel as a runtime target, though it would be possible to extend the project and makes it suitable to any other integration platform.
Disclaimer: the content illustrated here is related to version 1.8, it can change in future versions.</description>
    </item>
    
    <item>
      <title>Syndesis connectors development</title>
      <link>https://syndesis.io/docs/connectors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://syndesis.io/docs/connectors/</guid>
      <description>One of the most important features of Syndesis is to be able to connect to a variety of sources and destinations. This middleware product will transparently take care of the integration of such data source/destination. It just requires a custom development of the specific transport involved in the chosen component.
Since Apache Camel is providing a large offering of integrations components, Syndesis does offer the possibility to use them thanks to a proxy component whose goal is to identify the component and provide the correct configuration settings to make them available through the user interface.</description>
    </item>
    
  </channel>
</rss>